(function(){var e=typeof require=="function"?require(".."):window._;QUnit.module("Chaining"),test("map/flatten/reduce",function(){var t=["I'm a lumberjack and I'm okay","I sleep all night and I work all day","He's a lumberjack and he's okay","He sleeps all night and he works all day"],n=e(t).chain().map(function(e){return e.split("")}).flatten().reduce(function(e,t){return e[t]=e[t]||0,e[t]++,e},{}).value();equal(n.a,16,"counted all the letters in the song"),equal(n.e,10,"counted all the letters in the song")}),test("select/reject/sortBy",function(){var t=[1,2,3,4,5,6,7,8,9,10];t=e(t).chain().select(function(e){return e%2===0}).reject(function(e){return e%4===0}).sortBy(function(e){return-e}).value(),deepEqual(t,[10,6,2],"filtered and reversed the numbers")}),test("select/reject/sortBy in functional style",function(){var t=[1,2,3,4,5,6,7,8,9,10];t=e.chain(t).select(function(e){return e%2===0}).reject(function(e){return e%4===0}).sortBy(function(e){return-e}).value(),deepEqual(t,[10,6,2],"filtered and reversed the numbers")}),test("reverse/concat/unshift/pop/map",function(){var t=[1,2,3,4,5];t=e(t).chain().reverse().concat([5,5,5]).unshift(17).pop().map(function(e){return e*2}).value(),deepEqual(t,[34,10,8,6,4,2,10,10],"can chain together array functions.")}),test("splice",function(){var t=e([1,2,3,4,5]).chain();deepEqual(t.splice(1,3).value(),[1,5]),deepEqual(t.splice(1,0).value(),[1,5]),deepEqual(t.splice(1,1).value(),[1]),deepEqual(t.splice(0,1).value(),[],"#397 Can create empty array")}),test("shift",function(){var t=e([1,2,3]).chain();deepEqual(t.shift().value(),[2,3]),deepEqual(t.shift().value(),[3]),deepEqual(t.shift().value(),[],"#397 Can create empty array")}),test("pop",function(){var t=e([1,2,3]).chain();deepEqual(t.pop().value(),[1,2]),deepEqual(t.pop().value(),[1]),deepEqual(t.pop().value(),[],"#397 Can create empty array")}),test("chaining works in small stages",function(){var t=e([1,2,3,4]).chain();deepEqual(t.filter(function(e){return e<3}).value(),[1,2]),deepEqual(t.filter(function(e){return e>2}).value(),[3,4])}),test("#1562: Engine proxies for chained functions",function(){var t=e(512);strictEqual(t.toJSON(),512),strictEqual(t.valueOf(),512),strictEqual(+t,512),strictEqual(t.toString(),"512"),strictEqual(""+t,"512")})})();